package parser

type Expression struct {
	Expression string
	Types      []TokenType
}

var Expressions = [...]Expression{
	{"null\\b", []TokenType{PROP, NULL}},
	{"true\\b", []TokenType{PROP, TRUE}},
	{"false\\b", []TokenType{PROP, FALSE}},
	{"if\\b", []TokenType{PROP, STATEMENT, IF}},
	{"in\\b", []TokenType{PROP, STATEMENT, IN}},
	{"as\\b", []TokenType{PROP, STATEMENT, AS}},
	{"for\\b", []TokenType{PROP, STATEMENT, FOR}},
	{"while\\b", []TokenType{PROP, STATEMENT, WHILE}},
	{"var\\b", []TokenType{PROP, STATEMENT, VAR}},
	{"else\\b", []TokenType{PROP, STATEMENT, ELSE}},
	{"macro\\b", []TokenType{PROP, STATEMENT, MACRO}},
	{"elseif\\b", []TokenType{PROP, STATEMENT, ELSEIF}},
	{"return\\b", []TokenType{PROP, STATEMENT, RETURN}},
	{"listen\\b", []TokenType{PROP, STATEMENT, LISTEN}},
	{"trigger\\b", []TokenType{PROP, STATEMENT, TRIGGER}},
	{"break\\b", []TokenType{PROP, STATEMENT, BREAK}},
	{"continue\\b", []TokenType{PROP, STATEMENT, CONTINUE}},
	{"0[bB][0-1]+", []TokenType{BIN}},
	{"0[xX][0-9A-Fa-f]+", []TokenType{HEX}},
	{"(?:[0-9]*\\.)?[0-9]+[eE][+-]?[0-9]+", []TokenType{FLOAT}},
	{"[0-9]*\\.[0-9]+", []TokenType{FLOAT}},
	{"[0-9]+", []TokenType{INT}},
	{"this\\b", []TokenType{PROP, REF, THIS}},
	{"self\\b", []TokenType{PROP, REF}},
	{"global\\b", []TokenType{PROP, REF, GLOBAL}},
	{"[_\\$a-zA-Z][_\\$a-zA-Z0-9]*", []TokenType{PROP, REF, ID}},
	{"[\\x0A\\x0D]+", []TokenType{PROP, EOL}},
	{"[\\x09\\x20]+", []TokenType{SPACES}},
	{"\\{\\{%", []TokenType{LITERAL_START}},
	{"\\{\\{#", []TokenType{AST_START}},
	{"#\\}\\}", []TokenType{AST_END}},
	{"%\\}\\}", []TokenType{LITERAL_END}},
	{"\\{\\{\\*", []TokenType{CMT_START}},
	{"\\*\\}\\}", []TokenType{CMT_END}},
	{"\\}\\}", []TokenType{BLOCK_END}},
	{"\\{\\{", []TokenType{BLOCK_START}},
	{"->", []TokenType{METHOD}},
	{"=>", []TokenType{ARROW}},
	{"!=", []TokenType{NEQ}},
	{"\\^", []TokenType{BXOR}},
	{"\\|\\|", []TokenType{OR}},
	{"\\|", []TokenType{BOR}},
	{"\\&&", []TokenType{AND}},
	{"\\&", []TokenType{BAND}},
	{"!", []TokenType{NOT}},
	{"@", []TokenType{SUPPRESS}},
	{"\"", []TokenType{DQUOTE}},
	{"'", []TokenType{SQUOTE}},
	{"=", []TokenType{EQ}},
	{"%", []TokenType{MOD}},
	{":", []TokenType{COLON}},
	{",", []TokenType{COMMA}},
	{"\\?", []TokenType{QUERY}},
	{"<=", []TokenType{LE}},
	{">=", []TokenType{GE}},
	{"<", []TokenType{LT}},
	{">", []TokenType{GT}},
	{"\\.", []TokenType{DOT}},
	{"-", []TokenType{MINUS}},
	{"\\+", []TokenType{PLUS}},
	{"\\*", []TokenType{STAR}},
	{"\\/", []TokenType{SLASH}},
	{"\\\\", []TokenType{BACKSLASH}},
	{"\\(", []TokenType{LPAREN}},
	{"\\)", []TokenType{RPAREN}},
	{"\\[", []TokenType{LBRACKET}},
	{"\\]", []TokenType{RBRACKET}},
}
